{"ast":null,"code":"var _jsxFileName = \"/home/shahin/GithubU/pms-iti/frontend/src/pages/Nav.jsx\",\n  _s = $RefreshSig$();\n// import PrivateComponent from './utils/PrivateComponent';\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import cv from './mah.png';\nimport jwt_decode from \"jwt-decode\";\nimport { logout, refreshTokens, setRunningInterval, setTokens } from \"../redux/slices/TokensSlice\";\n// import { applyMiddleware } from \"@reduxjs/toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Nav = () => {\n  _s();\n  alert(\"mounted nav bar\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const fourMinutes = 2000;\n\n  // const [tokens_from_local_Storage, setlocals] = useState(() => (localStorage.getItem('Tokens') ? JSON.parse(localStorage.getItem('Tokens')) : null));\n\n  const tokens = useSelector(state => state.TokensSlice.tokens);\n\n  // if (tokens_from_local_Storage && tokens_from_local_Storage.refresh) {\n\n  // } else {\n  //   // alert(\"local storage is empty\");\n  // }\n\n  const autoLogin = () => {\n    if (tokens && tokens.refresh) {\n      // dispatch(logout());\n\n      dispatch(refreshTokens(tokens.refresh));\n      const interval = setInterval(() => {\n        dispatch(refreshTokens(tokens.refresh));\n      }, fourMinutes);\n      console.log('IIIiIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII');\n      dispatch(setRunningInterval(interval));\n    } else {\n      dispatch(logout());\n    }\n  };\n  useEffect(() => {\n    autoLogin();\n  }, []);\n\n  // const loggedin = useSelector((state) => state.TokensSlice.loggedin);\n  // alert(\"logged in \"+loggedin)\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"nav bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n_s(Nav, \"eQOckZEp8bjq+kzlnYcP+i0YDzI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","Navigate","Route","Routes","useNavigate","axios","BrowserRouter","useDispatch","useSelector","jwt_decode","logout","refreshTokens","setRunningInterval","setTokens","jsxDEV","_jsxDEV","Fragment","_Fragment","Nav","_s","alert","dispatch","navigate","fourMinutes","tokens","state","TokensSlice","autoLogin","refresh","interval","setInterval","console","log","handleLogout","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/pages/Nav.jsx"],"sourcesContent":["// import PrivateComponent from './utils/PrivateComponent';\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import cv from './mah.png';\nimport jwt_decode from \"jwt-decode\";\nimport { logout, refreshTokens, setRunningInterval, setTokens } from \"../redux/slices/TokensSlice\";\n// import { applyMiddleware } from \"@reduxjs/toolkit\";\n\n\nconst Nav = () => {\n\n\n\n\n\n\n\n    alert(\"mounted nav bar\");\n\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const fourMinutes = 2000;\n\n\n\n    // const [tokens_from_local_Storage, setlocals] = useState(() => (localStorage.getItem('Tokens') ? JSON.parse(localStorage.getItem('Tokens')) : null));\n\n    const tokens = useSelector((state) => state.TokensSlice.tokens);\n\n\n\n    // if (tokens_from_local_Storage && tokens_from_local_Storage.refresh) {\n\n\n    // } else {\n    //   // alert(\"local storage is empty\");\n    // }\n\n    const autoLogin = () => {\n        if (tokens && tokens.refresh) {\n            // dispatch(logout());\n\n\n            dispatch(refreshTokens(tokens.refresh));\n\n\n            const interval = setInterval(() => {\n                dispatch(refreshTokens(tokens.refresh));\n            }\n                , fourMinutes);\n            console.log('IIIiIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII');\n\n            dispatch(setRunningInterval(interval));\n\n\n\n\n\n\n\n        }\n        else {\n            dispatch(logout());\n        }\n\n\n\n    };\n\n    useEffect(() => {\n\n        autoLogin();\n\n\n    }, []);\n\n\n\n\n    // const loggedin = useSelector((state) => state.TokensSlice.loggedin);\n    // alert(\"logged in \"+loggedin)\n\n\n    const handleLogout = () => {\n\n\n\n\n\n        dispatch(logout());\n        navigate(\"/login\");\n\n    };\n\n\n\n\n\n\n\n    return (\n        <>\n            <button onClick={handleLogout}>logout</button>\n<p>nav bar</p>\n\n        </>\n    );\n};\n\nexport default Nav;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,MAAM,EAAEC,aAAa,EAAEC,kBAAkB,EAAEC,SAAS,QAAQ,6BAA6B;AAClG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAQdC,KAAK,CAAC,iBAAiB,CAAC;EAGxB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,WAAW,GAAG,IAAI;;EAIxB;;EAEA,MAAMC,MAAM,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACF,MAAM,CAAC;;EAI/D;;EAGA;EACA;EACA;;EAEA,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIH,MAAM,IAAIA,MAAM,CAACI,OAAO,EAAE;MAC1B;;MAGAP,QAAQ,CAACV,aAAa,CAACa,MAAM,CAACI,OAAO,CAAC,CAAC;MAGvC,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/BT,QAAQ,CAACV,aAAa,CAACa,MAAM,CAACI,OAAO,CAAC,CAAC;MAC3C,CAAC,EACKL,WAAW,CAAC;MAClBQ,OAAO,CAACC,GAAG,CAAC,2EAA2E,CAAC;MAExFX,QAAQ,CAACT,kBAAkB,CAACiB,QAAQ,CAAC,CAAC;IAQ1C,CAAC,MACI;MACDR,QAAQ,CAACX,MAAM,CAAC,CAAC,CAAC;IACtB;EAIJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IAEZ6B,SAAS,CAAC,CAAC;EAGf,CAAC,EAAE,EAAE,CAAC;;EAKN;EACA;;EAGA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IAMvBZ,QAAQ,CAACX,MAAM,CAAC,CAAC,CAAC;IAClBY,QAAQ,CAAC,QAAQ,CAAC;EAEtB,CAAC;EAQD,oBACIP,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MAAQoB,OAAO,EAAEF,YAAa;MAAAC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DxB,OAAA;MAAAmB,QAAA,EAAG;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eAEJ,CAAC;AAEX,CAAC;AAACpB,EAAA,CAnGID,GAAG;EAAA,QAWYX,WAAW,EACXH,WAAW,EAObI,WAAW;AAAA;AAAAgC,EAAA,GAnBxBtB,GAAG;AAqGT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
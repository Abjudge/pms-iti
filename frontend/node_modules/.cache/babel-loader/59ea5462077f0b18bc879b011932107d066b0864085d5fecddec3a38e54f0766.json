{"ast":null,"code":"var _jsxFileName = \"/home/shahin/GithubU/pms-iti/frontend/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { refreshTokens, setLoggedIn, setRunningInterval, setTokens, setUser, logout, updateFull } from '../redux/slices/TokensSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  alert(\"login page rendered\");\n  const loggedin = useSelector(state => state.TokensSlice.loggedin);\n  const dispatch = useDispatch();\n  const fourMinutes = 2000;\n  const navigate = useNavigate();\n\n  // const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n  //   \"refresh\": refresh,\n\n  // }\n  // );\n  const loginUser = async e => {\n    e.preventDefault();\n    if (!loggedin) {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n          \"email\": e.target.email.value,\n          \"password\": e.target.password.value\n        });\n        // ddd\n\n        const {\n          access,\n          refresh\n        } = response.data;\n        if (response.status === 200) {\n          dispatch(updateFull(true));\n          dispatch(setUser(jwt_decode(access)));\n          dispatch(setTokens({\n            access,\n            refresh\n          }));\n          localStorage.setItem('Tokens', await JSON.stringify(response.data));\n          navigate('/');\n          const interval = setInterval(() => {\n            dispatch(refreshTokens(refresh));\n          }, fourMinutes);\n          console.log(\"ðŸš€ ~ file: LoginPage.jsx:52 ~ interval ~ interval:\", interval);\n          dispatch(setRunningInterval(interval));\n          dispatch(setLoggedIn());\n          console.log(\"ðŸš€ ~ file: LoginPage.jsx:55 ~ loginUser ~ refresh:\", refresh);\n        } else {\n          alert('Something went wrong!');\n          dispatch(logout());\n        }\n      } catch (error) {\n        alert('Something faild to make request !' + error.response.status);\n        dispatch(logout());\n      }\n    } else {\n      alert(\"you 're logged in\");\n    }\n  };\n\n  // const updateToken = async () => {\n  // // const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n  // //   \"refresh\": refresh,\n\n  //   let response = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n  //   \"refresh\": refresh,\n  //   });\n\n  //   let data = await response.json();\n\n  //   if (response.status === 200) {\n  //     setAuthTokens(data);\n  //     setUser(jwt_decode(data.access));\n  //     localStorage.setItem('authTokens', JSON.stringify(data));\n  //   } else {\n  //     logoutUser();\n  //   }\n\n  //   if (loading) {\n  //     setLoading(false);\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        id: \"\",\n        placeholder: \"enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"cOXxdVQycq5SvmCHK3VXittMUqM=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","refreshTokens","setLoggedIn","setRunningInterval","setTokens","setUser","logout","updateFull","useDispatch","useSelector","axios","useNavigate","jwt_decode","jsxDEV","_jsxDEV","LoginPage","_s","alert","loggedin","state","TokensSlice","dispatch","fourMinutes","navigate","loginUser","e","preventDefault","response","post","target","email","value","password","access","refresh","data","status","localStorage","setItem","JSON","stringify","interval","setInterval","console","log","error","children","onSubmit","type","name","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\nimport { refreshTokens, setLoggedIn, setRunningInterval, setTokens, setUser, logout, updateFull } from '../redux/slices/TokensSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\n\nconst LoginPage = () => {\n  alert(\"login page rendered\");\n  const loggedin = useSelector((state) => state.TokensSlice.loggedin);\n\n  const dispatch = useDispatch();\n  const fourMinutes = 2000;\n\n  const navigate = useNavigate();\n\n  // const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n  //   \"refresh\": refresh,\n\n  // }\n  // );\n  const loginUser = async (e) => {\n    e.preventDefault();\n\n    if (!loggedin) {\n      try {\n\n        const response = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n          \"email\": e.target.email.value,\n          \"password\": e.target.password.value\n\n        }\n\n        );\n        // ddd\n\n        const { access, refresh } = response.data;\n        if (response.status === 200) {\n          dispatch(updateFull(true));\n          dispatch(setUser(jwt_decode(access)));\n          dispatch(setTokens({ access, refresh }));\n\n          localStorage.setItem('Tokens', await JSON.stringify(response.data));\n          navigate('/');\n\n\n          const interval = setInterval(() => {\n            dispatch(refreshTokens(refresh));\n          }\n            , fourMinutes);\n\n          console.log(\"ðŸš€ ~ file: LoginPage.jsx:52 ~ interval ~ interval:\", interval);\n\n          dispatch(setRunningInterval(interval));\n          dispatch(setLoggedIn());\n\n\n          console.log(\"ðŸš€ ~ file: LoginPage.jsx:55 ~ loginUser ~ refresh:\", refresh);\n\n        } else {\n          alert('Something went wrong!');\n          dispatch(logout());\n\n        }\n\n      } catch (error) {\n        alert('Something faild to make request !' + error.response.status);\n        dispatch(logout());\n      }\n\n\n    } else {\n      alert(\"you 're logged in\");\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n  // const updateToken = async () => {\n  // // const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n  // //   \"refresh\": refresh,\n\n  //   let response = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n  //   \"refresh\": refresh,\n  //   });\n\n  //   let data = await response.json();\n\n  //   if (response.status === 200) {\n  //     setAuthTokens(data);\n  //     setUser(jwt_decode(data.access));\n  //     localStorage.setItem('authTokens', JSON.stringify(data));\n  //   } else {\n  //     logoutUser();\n  //   }\n\n  //   if (loading) {\n  //     setLoading(false);\n  //   }\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div><form onSubmit={loginUser} >\n      <input type=\"text\" name=\"email\" id=\"\" placeholder='enter your email' />\n\n      <input type=\"password\" name=\"password\" id=\"\" />\n      <input type=\"submit\" />\n\n    </form></div>);\n};\n\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
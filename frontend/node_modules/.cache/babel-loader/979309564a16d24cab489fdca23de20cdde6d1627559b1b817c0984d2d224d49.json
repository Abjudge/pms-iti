{"ast":null,"code":"var _jsxFileName = \"/home/shahin/GithubU/pms-iti/frontend/src/utils/PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate } from \"react-router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport cv from '../mah.png';\nimport LoginPage from \"../pages/LoginPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const tokens = useSelector(state => state.TokensSlice.tokens);\n  const full = useSelector(state => state.TokensSlice.full);\n  const loggedout = useSelector(state => state.TokensSlice.loggedout);\n  if (!loggedout) {\n    if (full) {\n      return tokens.access ? children : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 48\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"updating your credentials \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"if this page persisted   click to go to login page      \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 110\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  }\n};\n_s(PrivateRoute, \"5cv3VWtjLxBWkA0hp45f6MddDwI=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","React","useSelector","Link","cv","LoginPage","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","_ref","_s","children","tokens","state","TokensSlice","full","loggedout","access","fileName","_jsxFileName","lineNumber","columnNumber","src","to","_c","$RefreshReg$"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/utils/PrivateRoute.jsx"],"sourcesContent":["import { Navigate } from \"react-router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport cv from '../mah.png';\nimport LoginPage from \"../pages/LoginPage\";\n\nconst PrivateRoute = ({ children }) => {\n\n    const tokens = useSelector((state) => state.TokensSlice.tokens);\n    const full = useSelector((state) => state.TokensSlice.full);\n    const loggedout = useSelector((state) => state.TokensSlice.loggedout);\n\n\n    if (!loggedout) {\n\n\n\n        if (full) {\n            return (tokens.access ? children : <LoginPage />);\n\n        } else {\n            return (\n\n                <>\n                    <img src={cv} />\n                    <h2>updating your credentials </h2>\n                    <p>if this page persisted   click to go to login page      <Link to='/login'>login</Link><br />\n                    </p>\n                </>\n\n            );\n        }\n\n    }\n\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,cAAc;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAE9B,MAAMG,MAAM,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACF,MAAM,CAAC;EAC/D,MAAMG,IAAI,GAAGf,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,IAAI,CAAC;EAC3D,MAAMC,SAAS,GAAGhB,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACE,SAAS,CAAC;EAGrE,IAAI,CAACA,SAAS,EAAE;IAIZ,IAAID,IAAI,EAAE;MACN,OAAQH,MAAM,CAACK,MAAM,GAAGN,QAAQ,gBAAGN,OAAA,CAACF,SAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAEpD,CAAC,MAAM;MACH,oBAEIhB,OAAA,CAAAE,SAAA;QAAAI,QAAA,gBACIN,OAAA;UAAKiB,GAAG,EAAEpB;QAAG;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChBhB,OAAA;UAAAM,QAAA,EAAI;QAA0B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnChB,OAAA;UAAAM,QAAA,GAAG,0DAAwD,eAAAN,OAAA,CAACJ,IAAI;YAACsB,EAAE,EAAC,QAAQ;YAAAZ,QAAA,EAAC;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAAAhB,OAAA;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5F,CAAC;MAAA,eACN,CAAC;IAGX;EAEJ;AAEJ,CAAC;AAACX,EAAA,CA7BIF,YAAY;EAAA,QAECR,WAAW,EACbA,WAAW,EACNA,WAAW;AAAA;AAAAwB,EAAA,GAJ3BhB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
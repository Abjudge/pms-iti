{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nconst initialState = {\n  loggedout: false,\n  tokens: {},\n  user: {},\n  full: false,\n  running_interval: {},\n  loggedin: false,\n  intervaltime: 5000\n};\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async refresh => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n    \"refresh\": refresh\n  });\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    setTokens: (state, action) => {\n      const {\n        access,\n        refresh\n      } = action.payload;\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    setUser: (state, action) => {\n      const {\n        user_id\n      } = action.payload;\n      state.user.user_id = user_id;\n    },\n    updateFull: (state, action) => {\n      state.full = action.payload;\n    },\n    setRunningInterval: (state, action) => {\n      if (!state.loggedin) {\n        state.running_interval = action.payload;\n        console.log(\"///////////////////////////////////////////////////////////////////////////////\");\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ state.running_interval:\", state.running_interval);\n      } else {\n        alert(\"there is another interval running\");\n      }\n    },\n    setLoggedIn: (state, action) => {\n      state.loggedin = true;\n    },\n    setloggedout: (state, action) => {\n      state.loggedout = false;\n    },\n    setupdateTokensfun: (state, action) => {\n      state.updateTokensfun = action.payload;\n    },\n    logout: (state, action) => {\n      if (state.loggedin) {\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:62 ~ state.running_interval:\", state.running_interval);\n\n        // alert(\"interval cleared\");\n\n        clearInterval(state.running_interval);\n      }\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:67 ~ state.running_interval:\", state.running_interval);\n      localStorage.clear();\n      alert(\"logou\");\n      state.tokens = {};\n      state.full = false;\n      state.user = {};\n      state.loggedin = false;\n      state.loggedout = true;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(refreshTokens.pending, (state, action) => {\n      state.full = false;\n    });\n    builder.addCase(refreshTokens.fulfilled, (state, action) => {\n      state.tokens.access = action.payload.access;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:88 ~ builder.addCase ~ action.payload.access:\", action.payload.access);\n      console.log(\"*******************************************************************\");\n      state.auth = true;\n      const {\n        user_id\n      } = jwt_decode(state.tokens.access);\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:142 ~ builder.addCase ~ state.tokens.access:\", state.tokens.access);\n      state.user.user_id = user_id;\n      state.loggedin = true;\n      state.full = true;\n    });\n    builder.addCase(refreshTokens.rejected, (state, action) => {\n      TokensSlice.caseReducers.logout(state, action);\n      alert(\"failed to refresh\");\n    });\n  }\n});\nexport const {\n  setTokens,\n  updateFull,\n  setloggedout,\n  setUser,\n  logout,\n  setupdateTokensfun,\n  setRunningInterval,\n  setLoggedIn\n} = TokensSlice.actions;\nexport default TokensSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","jwt_decode","initialState","loggedout","tokens","user","full","running_interval","loggedin","intervaltime","refreshTokens","refresh","data","post","console","log","access","TokensSlice","name","reducers","setTokens","state","action","payload","setUser","user_id","updateFull","setRunningInterval","alert","setLoggedIn","setloggedout","setupdateTokensfun","updateTokensfun","logout","clearInterval","localStorage","clear","extraReducers","builder","addCase","pending","fulfilled","auth","rejected","caseReducers","actions","reducer"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/redux/slices/TokensSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\n\n\n\nconst initialState = {\n  loggedout: false,\n  tokens: {},\n  user: {},\n  full: false,\n  running_interval: {},\n  loggedin: false,\n  intervaltime:5000,\n};\n\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async (refresh) => {\n\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n    \"refresh\": refresh,\n  }\n  );\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  return data;\n\n}\n);\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n\n\n    setTokens: (state, action) => {\n      const { access, refresh } = action.payload;\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n\n\n    setUser: (state, action) => {\n      const { user_id } = action.payload;\n      state.user.user_id = user_id;\n    },\n    updateFull: (state, action) => {\n      state.full = action.payload;\n    },\n    setRunningInterval: (state, action) => {\n      if (!state.loggedin) {\n        state.running_interval = action.payload;\n        console.log(\"///////////////////////////////////////////////////////////////////////////////\");\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ state.running_interval:\", state.running_interval);\n      } else {\n        alert(\"there is another interval running\");\n      }\n    },\n    setLoggedIn: (state, action) => {\n      state.loggedin = true;\n    },\n    setloggedout: (state, action) => {\n      state.loggedout = false;\n    },\n    setupdateTokensfun: (state, action) => {\n      state.updateTokensfun = action.payload;\n    },\n    logout: (state, action) => {\n      if (state.loggedin) {\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:62 ~ state.running_interval:\", state.running_interval);\n\n        // alert(\"interval cleared\");\n\n        clearInterval(state.running_interval);\n      }\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:67 ~ state.running_interval:\", state.running_interval);\n\n      localStorage.clear();\n      alert(\"logou\");\n      state.tokens = {};\n      state.full = false;\n      state.user = {};\n      state.loggedin = false;\n      state.loggedout = true;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(refreshTokens.pending, (state, action) => {\n      state.full = false;\n    });\n    builder.addCase(refreshTokens.fulfilled, (state, action) => {\n      state.tokens.access = action.payload.access;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:88 ~ builder.addCase ~ action.payload.access:\", action.payload.access);\n      console.log(\"*******************************************************************\");\n      state.auth = true;\n      const { user_id } = jwt_decode(state.tokens.access);\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:142 ~ builder.addCase ~ state.tokens.access:\", state.tokens.access);\n      state.user.user_id = user_id;\n      state.loggedin = true;\n      state.full = true;\n\n\n    });\n    builder.addCase(refreshTokens.rejected, (state, action) => {\n      TokensSlice.caseReducers.logout(state, action); alert(\"failed to refresh\");\n    });\n  },\n});\nexport const { setTokens, updateFull, setloggedout, setUser, logout, setupdateTokensfun, setRunningInterval, setLoggedIn } = TokensSlice.actions;\n\nexport default TokensSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}